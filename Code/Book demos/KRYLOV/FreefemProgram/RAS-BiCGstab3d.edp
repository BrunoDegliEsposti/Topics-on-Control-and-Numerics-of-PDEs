/*# debutPartition #*/
include "../../FreefemCommon/data3d.edp"
include "../../FreefemCommon/decomp3d.idp"
include "../../FreefemCommon/createPartition3d.idp"
SubdomainsPartitionUnity3(Th,part[],sizeovr,aTh,Rih,Dih,Ndeg,VolumeThi);  
/*# endPartition #*/
/*# debutGlobalData #*/
Aglobal = vaglobal(Vh,Vh,solver = UMFPACK);  // global matrix
rhsglobal[] = vaglobal(0,Vh);                // global rhs
uglob[] = Aglobal^-1*rhsglobal[]; 
/*# finGlobalData #*/
/*# debutLocalData #*/        
for(int i = 0;i<npart;++i)
  {
    cout << " Domain :" << i << "/" << npart << endl; 
    matrix aT = Aglobal*Rih[i]'; 
    aA[i] =  Rih[i]*aT;        
    set(aA[i],solver = UMFPACK);       // direct solvers using UMFPACK
  } 
/*# finLocalData #*/
/*# debutBiCGSolve #*/
include "../../FreefemCommon/matvecAS.idp"
include "BiCGstab.idp"
Vh un = 0, sol, er;                             // initial guess, final solution and error
sol[] =  BiCGstab(un[], tol, maxit);
plot(sol,dim=3,wait=1,cmm="Final solution",value =1,fill=1);
er[] = sol[]-uglob[];
cout << "Final error = " << er[].linfty/uglob[].linfty << endl;
/*# finBiCGSolve #*/
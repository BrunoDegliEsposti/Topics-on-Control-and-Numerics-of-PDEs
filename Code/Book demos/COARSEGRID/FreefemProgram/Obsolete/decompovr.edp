include "createPartition.edp";

include "decompMetis.edp";

// overlapping partition
int sizeoverlaps = 3;
mesh[int] aTh(npart);         // sequence of overlapping meshes 
matrix[int] Rih(npart);       // local restriction operators 
matrix[int] Dih(npart);       // partition of unity operators  
SubdomainsPartitionUnity(Th, part[], sizeoverlaps, aTh, Rih, Dih);


// Check partition of unity
Vh fctone=1;
plot(fctone,fill=1,value=1, dim=3,wait=1);

Vh sum=0;
for(int i=0; i < npart;i++)
{
	Vh localone;
    real[int] bi = Rih[i]*fctone[];         // restriction to the local domain
    real[int] di = Dih[i]*bi;
    localone[] = Rih[i]'*di;
    sum[] +=localone[] ;
    plot(localone,fill=1,value=1, dim=3,wait=1);
}

plot(sum,fill=1,value=1, dim=3,wait=1);
